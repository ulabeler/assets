require('dotenv').config();
const express = require('express');
const app = express();
// View EngineにEJSを指定。
app.set('view engine', 'ejs');
app.use(express.static('public'));
app.use(express.urlencoded({ extended: true}));
const bodyParser = require('body-parser');
app.use(bodyParser.urlencoded({extended:true, limit: '20mb'  }));
const cookie = require('cookie-parser');
app.use(cookie)
const fs = require('fs');
const { v4: uuidv4 } = require('uuid');
const mysql = require('mysql');

// オブジェクト選択
app.get('/select_object', function(req, res) {
  res.render('select_object');
});
app.post('/select_object', function(req, res) {
  const object = req.body.object;
  console.log(object);
  if(object == "スマホケース") {
    res.redirect("/select_object_sub");
    return;
  }else {
    res.cookie('object_name', object, {maxAge:60000, httpOnly:false});
    res.redirect('/select_color');
    return;
  }
});
// Ipthon選択
app.get('/select_object_sub', function(req, res) {
  res.render("select_object_sub");

});
app.post("/select_object_sub", function(req,res) {
  const object = req.body.object;
  res.cookie('object_name', object, {maxAge:60000, httpOnly:false});
  res.redirect("/select_color");
  return;
})

// カラー選択
app.get('/select_color',function(req, res) {
  // console.log(req.headers.cookie);
  res.render('select_color');
});
app.post('/select_color', function(req, res) {
  // console.log(req.headers.cookie);
  const color = req.body.color;
  res.cookie('color', color, {maxAge:60000, httpOnly:false});
  res.redirect('/customize_editing');
});

// カスタマイズ画面
app.get('/customize_editing', function(req, res) {
  res.render('customize_editing');
});
app.post('/customize_editing', function(req, res) {
  let base = req.body.base.replace("data:image/png;base64,","");
  const uuid = uuidv4();
  fs.writeFile( "public/images/" + uuid + ".png" , base , { encoding: "base64" },  (err) => {
      // 書き出しに失敗した場合
      if(err){
        console.log("エラーが発生しました。" + err);
        throw err;
      }else{
        console.log("ファイルが正常に書き出しされました")
      }
  }); 
  res.redirect("/work_setting");
  return;
});

app.get('/customize_delete_sign', function(req, res) {
  res.render('customize_delete_sign');
});

// 作品設定
app.get('/work_setting', function(req, res) {
  res.render('work_setting');
});
app.post('/work_setting', function(req, res) {
  let name = req.body.name;
  let example2 = req.body.example2;
  res.redirect('/fwork_setting_confirmation', {name: name, example2:example2 });
});

// 作品設定確認
app.get('/work_setting_confirmation', function(req, res) {
  res.render('work_setting_confirmation', );
});

app.listen(3000, () => console.log('Example app listening on port 3000!'));
