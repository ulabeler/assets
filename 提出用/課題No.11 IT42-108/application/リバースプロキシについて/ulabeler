map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
        server_name (本番のドメイン名);
        # listen 80;
        # listen [::]:80;
        client_max_body_size 100m;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri @proxy;
        }


        location @proxy {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Proxy "";
            proxy_pass_header Server;

            proxy_pass http://localhost:3008; # .envで決めたポート番号
            proxy_buffering off;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            add_header Strict-Transport-Security "max-age=31536000";

            tcp_nodelay on;
          }

        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/(ドメイン名)/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/(ドメイン名)/privkey.pem; # managed by Certbot    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = (本番のドメイン名)) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


#        listen 80 ;
#        listen [::]:80 ;
    server_name (本番のドメイン名);
    return 404; # managed by Certbot
        client_max_body_size 100m;


}